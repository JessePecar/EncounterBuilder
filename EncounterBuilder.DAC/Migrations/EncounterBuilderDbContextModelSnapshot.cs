// <auto-generated />
using System;
using EncounterBuilder.DAC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EncounterBuilder.DAC.Migrations
{
    [DbContext(typeof(EncounterBuilderDbContext))]
    partial class EncounterBuilderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EncounterBuilder.DAC.Models.ActionsLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ActionsLink");
                });

            modelBuilder.Entity("EncounterBuilder.DAC.Models.Attack", b =>
                {
                    b.Property<int>("AttackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Damage")
                        .HasColumnType("TEXT");

                    b.Property<int>("DamageType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Range")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SavingThrow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellDamageType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThrowType")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttackId");

                    b.ToTable("Attacks");
                });

            modelBuilder.Entity("EncounterBuilder.DAC.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Alignment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Race")
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("EncounterBuilder.DAC.Models.CharacterAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CharacterAbility");
                });

            modelBuilder.Entity("EncounterBuilder.DAC.Models.CharacterActions", b =>
                {
                    b.Property<int>("CharacterActionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CharacterAttackAttackId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWeaponAttack")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterActionsId");

                    b.HasIndex("CharacterAttackAttackId");

                    b.ToTable("CharacterActions");
                });

            modelBuilder.Entity("EncounterBuilder.DAC.Models.CharacterStats", b =>
                {
                    b.Property<int>("CharacterStatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Charisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharismaModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Constitution")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConstitutionModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dexterity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DexterityModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntelligenceModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StrengthModifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wisdom")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WisdomModifier")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterStatsId");

                    b.ToTable("CharacterStats");
                });

            modelBuilder.Entity("EncounterBuilder.DAC.Models.CharacterActions", b =>
                {
                    b.HasOne("EncounterBuilder.DAC.Models.Attack", "CharacterAttack")
                        .WithMany()
                        .HasForeignKey("CharacterAttackAttackId");

                    b.Navigation("CharacterAttack");
                });
#pragma warning restore 612, 618
        }
    }
}
